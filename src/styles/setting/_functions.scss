//@mixin clearfix {
//  &:after {
//    content: "";
//    display: table;
//    clear: both;
//  }
//}

//@mixin scrollBar {
//  &::-webkit-scrollbar-track-piece {
//    background: #d3dce6;
//  }
//
//  &::-webkit-scrollbar {
//    width: 6px;
//  }
//
//  &::-webkit-scrollbar-thumb {
//    background: #99a9bf;
//    border-radius: 20px;
//  }
//}

// 轉換 px 為瀏覽器對應的 rem
@function to-rem($px) {
  @return ($px / 16px) * 1rem;
}

//
//// position
//@mixin position ($type, $top: n, $right: n, $bottom: n, $left: n) {
//  position: $type;
//
//  @if $top !=n {
//    top: $top;
//  }
//
//  @if $right !=n {
//    right: $right;
//  }
//
//  @if $bottom !=n {
//    bottom: $bottom;
//  }
//
//  @if $left !=n {
//    left: $left;
//  }
//}


@mixin background-color($color_value) {
  background-color: $color_value !important;
}

@mixin border-color($color_value) {
  border-color: $color_value !important;
}

@mixin text-color($color_value) {
  color: $color_value !important;
  caret-color: $color_value !important;
}

@mixin hover-background-color($color_value) {
  background-color: $color_value !important;
  border-color: $color_value !important;
}


// Adapted from https://gist.github.com/pentzzsolt/4949bbd7691d43d00616dc4f1451cae9#file-non-destructive-map-merge-4-scss
@function map-deep-merge($parent-map, $child-map) {
  $result: $parent-map;

  @each $key, $child in $child-map {
    $parent-has-key: map-has-key($result, $key);
    $parent-value: map-get($result, $key);
    $parent-type: type-of($parent-value);
    $child-type: type-of($child);
    $parent-is-map: $parent-type == map;
    $child-is-map: $child-type == map;

    @if (not $parent-has-key) or ($parent-type != $child-type) or (not ($parent-is-map and $child-is-map)) {
      $result: map-merge($result, ($key: $child));
    } @else {
      $result: map-merge($result, ($key: map-deep-merge($parent-value, $child)));
    }
  }
  @return $result
}
